version: '3'

services:
  api-query:
    build: ./backend/api-query
    ports:
     - "3000:3000"
    environment:
      - RABBIT_HOST=0.0.0.0
      - ES_HOST=0.0.0.0
    depends_on:
      - elasticsearch
      - rabbitmq
  api-command:
    build: ./backend/api-command
    ports:
     - "3001:3001"
    environment:
      - RABBIT_HOST=0.0.0.0
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=dethithpt
      - MYSQL_USER=dethithpt
      - MYSQL_PASSWORD=12345678
    depends_on:
     - mysql
     - rabbitmq

  frontend: # Nginx Server For Frontend App
    container_name: frontend
    image: nginx
    volumes: # Serve local "public" dir
      - ./frontend/build:/usr/share/nginx/html
    ports:
      - "8080:80" # Forward site to localhost:8080

  elasticsearch: # Elasticsearch Instance
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports: # Expose ElasticSearch ports
      - "9300:9300"
      - "9200:9200"
  mysql:
    container_name: mysql
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: dethithpt
      MYSQL_USER: dethithpt
      MYSQL_PASSWORD: 12345678
    ports:
      - "3306:3306"
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    restart: always